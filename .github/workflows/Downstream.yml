name: IntegrationTest
on:
  push:
    branches:
      - master
  pull_request:

jobs:
  test:
    name: ${{ matrix.package }}/${{ matrix.julia-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        julia-version: ['1.6', '1.10', '1', 'pre']
        os: [ubuntu-latest]
        package:
          - Accessors
          - BangBang
          - Setfield
          - Flatten
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.julia-version }}
          arch: x64
      - uses: julia-actions/julia-buildpkg@latest
      - name: Install downstream and run its tests
        shell: julia --color=yes {0}
        run: |
          using Pkg
          try
            Pkg.activate("downstream")
            # force it to use this PR's version of the package
            Pkg.develop(PackageSpec(path="."))  # resolver may fail with main deps
            Pkg.add("${{ matrix.package }}")
            Pkg.update()
            Pkg.test("${{ matrix.package }}", coverage=true)  # resolver may fail with test time deps
          catch err
            err isa Pkg.Resolve.ResolverError || rethrow()
            # If we can't resolve that means this is incompatible by SemVer and this is fine
            # It means we marked this as a breaking change, so we don't need to worry about
            # Mistakenly introducing a breaking change, as we have intentionally made one
            @info "Not compatible with this release. No problem." exception=err
            exit(0)  # Exit immediately, as a success
          end
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v1
        with:
          file: lcov.info
